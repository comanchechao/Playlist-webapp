# Generated by Django 3.1 on 2020-08-22 14:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('playlist', '0002_artist_song'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.DeleteModel(
            name='Tracks',
        ),
        migrations.RemoveField(
            model_name='song',
            name='artists',
        ),
        migrations.AddField(
            model_name='artist',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='artist',
            name='date_of_death',
            field=models.DateField(blank=True, null=True, verbose_name='Died'),
        ),
        migrations.AddField(
            model_name='artist',
            name='description',
            field=models.TextField(default=None),
        ),
        migrations.AddField(
            model_name='artist',
            name='genre',
            field=models.ManyToManyField(to='playlist.Genre'),
        ),
        migrations.AddField(
            model_name='song',
            name='artist',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='playlist.artist'),
        ),
        migrations.AddField(
            model_name='song',
            name='genre',
            field=models.ManyToManyField(to='playlist.Genre'),
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playlist.artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='genre',
            field=models.ManyToManyField(to='playlist.Genre'),
        ),
    ]
